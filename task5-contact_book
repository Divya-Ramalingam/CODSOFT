import tkinter as tk
from tkinter import messagebox

# Main window
root = tk.Tk()
root.title("üìñ Contact Book")
root.geometry("500x500")
root.configure(bg="lightgrey")

# Contact storage
contacts = []

# Functions
def add_contact():
    name = name_entry.get()
    email = email_entry.get()
    phone = phone_entry.get()
    address = address_entry.get()
    if name and phone:
        contacts.append({"Name": name, "Phone": phone, "Email": email, "Address": address})
        clear_entries()
        update_contact_list()
    else:
        messagebox.showerror("Error", "Name and phone cannot be empty")

def update_contact_list():
    contact_list.delete(0, tk.END)
    for contact in contacts:
        contact_list.insert(tk.END, f"{contact['Name']} - {contact['Phone']}")

def search_contact():
    search_term = search_entry.get()
    contact_list.delete(0, tk.END)
    for contact in contacts:
        if search_term.lower() in contact['Name'].lower() or search_term in contact['Phone']:
            contact_list.insert(tk.END, f"{contact['Name']} - {contact['Phone']}")

def update_selected_contact():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showerror("Error", "No contact selected")
        return
    index = selected[0]
    name = name_entry.get()
    phone = phone_entry.get()
    email = email_entry.get()
    address = address_entry.get()
    if name and phone:
        contacts[index] = {"Name": name, "Phone": phone, "Email": email, "Address": address}
        clear_entries()
        update_contact_list()
    else:
        messagebox.showerror("Error", "Name and phone cannot be empty")

def delete_contact():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showerror("Error", "No contact selected")
        return
    index = selected[0]
    del contacts[index]
    update_contact_list()

def clear_entries():
    name_entry.delete(0, tk.END)
    phone_entry.delete(0, tk.END)
    email_entry.delete(0, tk.END)
    address_entry.delete(0, tk.END)

# Entry field style
entry_style = {"width": 30, "bg": "white", "fg": "black", "font": ("Helvetica", 10)}

# Form
form_frame = tk.Frame(root, bg="lightgrey")
form_frame.pack(pady=10)

tk.Label(form_frame, text="Name:", bg="lightgrey", font=("Helvetica", 10), fg="black").grid(row=0, column=0, sticky="e")
name_entry = tk.Entry(form_frame, **entry_style)
name_entry.grid(row=0, column=1, pady=5)

tk.Label(form_frame, text="Phone:", bg="lightgrey", font=("Helvetica", 10), fg="black").grid(row=1, column=0, sticky="e")
phone_entry = tk.Entry(form_frame, **entry_style)
phone_entry.grid(row=1, column=1)

tk.Label(form_frame, text="Email:", bg="lightgrey", font=("Helvetica", 10), fg="black").grid(row=2, column=0, sticky="e")
email_entry = tk.Entry(form_frame, **entry_style)
email_entry.grid(row=2, column=1)

tk.Label(form_frame, text="Address:", bg="lightgrey", font=("Helvetica", 10), fg="black").grid(row=3, column=0, sticky="e")
address_entry = tk.Entry(form_frame, **entry_style)
address_entry.grid(row=3, column=1)

# Buttons
button_frame = tk.Frame(root, bg="lightgrey")
button_frame.pack(pady=10)

button_style = {"bg": "#87CEEB", "fg": "black", "font": ("Helvetica", 10, "bold"), "activebackground": "#00BFFF", "relief": "raised"}

add_btn = tk.Button(button_frame, text="‚ûï Add", command=add_contact, **button_style)
add_btn.grid(row=0, column=0, padx=5)

update_btn = tk.Button(button_frame, text="üîÑUpdate", command=update_selected_contact, **button_style)
update_btn.grid(row=0, column=1, padx=5)

delete_btn = tk.Button(button_frame, text="üóëÔ∏èDelete", command=delete_contact, **button_style)
delete_btn.grid(row=0, column=2, padx=5)

# Search
search_frame = tk.Frame(root, bg="lightgrey")
search_frame.pack(pady=10)

tk.Label(search_frame, text="Search:", bg="lightgrey", font=("Helvetica", 10), fg="black").grid(row=0, column=0, sticky="e")
search_entry = tk.Entry(search_frame, width=20, bg="white", fg="black", font=("Helvetica", 10))
search_entry.grid(row=0, column=1, padx=5)

search_btn = tk.Button(search_frame, text="üîç Search", command=search_contact, **button_style)
search_btn.grid(row=0, column=2, padx=5)

# Contact list
contact_list = tk.Listbox(root, width=50, height=10, font=("Helvetica", 10), bg="white", fg="black")
contact_list.pack(pady=10)

# Run the application
root.mainloop()
